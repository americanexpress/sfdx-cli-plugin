/**
 * @module sfdc
 */
import { JsonMap, Optional } from '@salesforce/ts-types';
/**
 * Returns `true` if a provided URL contains a Salesforce owned domain.
 *
 * @param {string} urlString The URL to inspect.
 * @returns {boolean}
 */
export declare function isSalesforceDomain(urlString: string): boolean;
/**
 * Converts an 18 character Salesforce ID to 15 characters.
 *
 * @param {string} id The id to convert.
 * @return {Optional<string>}
 */
export declare function trimTo15(id?: string): Optional<string>;
/**
 * Tests whether an API version matches the format `i.0`.
 *
 * @param value The API version as a string.
 * @returns {boolean}
 */
export declare function validateApiVersion(value: string): boolean;
/**
 * Tests whether an email matches the format `me@my.org`
 *
 * @param value The email as a string.
 * @returns {boolean}
 */
export declare function validateEmail(value: string): boolean;
/**
 * Tests whether a Salesforce ID is in the correct format, a 15- or 18-character length string with only letters and numbers
 * @param value The ID as a string.
 * @returns {boolean}
 */
export declare function validateSalesforceId(value: string): boolean;
/**
 * Tests whether a path is in the correct format; the value doesn't include the characters "[", "]", "?", "<", ">", "?", "|"
 * @param value The path as a string.
 * @returns {boolean}
 */
export declare function validatePathDoesNotContainInvalidChars(value: string): boolean;
/**
 * Returns the first key within the object that has an upper case first letter.
 *
 * @param {JsonMap} data The object in which to check key casing.
 * @returns {Optional<string>}
 */
export declare function findUpperCaseKeys(data?: JsonMap): Optional<string>;
