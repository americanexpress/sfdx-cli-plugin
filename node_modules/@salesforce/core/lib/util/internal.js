"use strict";
/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
Object.defineProperty(exports, "__esModule", { value: true });
const sfdxError_1 = require("../sfdxError");
const fs_1 = require("./fs");
/**
 * @property {string} SFDX_PROJECT_JSON The name of the project config file.
 * @private
 */
// This has to be defined on util to prevent circular deps with project and configFile.
exports.SFDX_PROJECT_JSON = 'sfdx-project.json';
/**
 * Performs an upward directory search for an sfdx project file.
 *
 * @param {string} [dir=process.cwd()] The directory path to start traversing from.
 * @returns {Promise<string>} The absolute path to the project.
 * @throws {SfdxError} **`{name: 'InvalidProjectWorkspace'}`** If the current folder is not located in a workspace.
 * @see util.SFDX_PROJECT_JSON
 * @see util.traverseForFile
 * @see {@link https://nodejs.org/api/process.html#process_process_cwd|process.cwd()}
 * @private
 */
async function resolveProjectPath(dir = process.cwd()) {
    const projectPath = await fs_1.traverseForFile(dir, exports.SFDX_PROJECT_JSON);
    if (!projectPath) {
        throw sfdxError_1.SfdxError.create('@salesforce/core', 'config', 'InvalidProjectWorkspace');
    }
    return projectPath;
}
exports.resolveProjectPath = resolveProjectPath;
//# sourceMappingURL=internal.js.map