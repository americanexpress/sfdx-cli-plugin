import { flags as Flags } from '@oclif/command';
import { JsonMap } from '@salesforce/ts-types';
export interface SfdxFlagsConfig {
    [key: string]: Flags.IFlag<any> | string | boolean | JsonMap;
}
/**
 * Builds flags for a command given a configuration object.  Supports the following usecases:
 *     1. Enabling common SFDX flags. E.g., { verbose: true }
 *     2. Disabling common SFDX flags. E.g., { apiversion: false }
 *     3. Overriding common SFDX flags.  E.g., { targetusername: { required: true } }
 *     4. Defining typed flags.  E.g., { myFlag: { char: '-m', type: 'array' }}
 *     5. Defining oclif flags.  E.g., { myFlag: Flags.boolean({ char: '-f' }) }
 *     6. Defining custom flag types.  E.g., { myCustomFlag: { parse: (val) => parseInt(val, 10) }}
 *
 * @param {SfdxFlagsConfig} flagsConfig The configuration object for a flag.  @see {@link SfdxFlagsConfig}
 * @returns {Flags.Input<any} The flags for the command.
 */
export declare function buildSfdxFlags(flagsConfig?: SfdxFlagsConfig): Flags.Input<any>;
